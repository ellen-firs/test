import streamlit as st
import pandas as pd
import sqlite3

st.html('<head><script src="https://telegram.org/js/telegram-web-app.js"></script></head>')

# Функция для подключения к базе данных
def get_connection():
    return sqlite3.connect('schedule.db')  # Замените на путь к вашей базе данных

# Функция для получения списка групп (для примера, вручную)
def get_groups():
    return ["Группа A", "Группа B"]

# Функция для получения расписания для выбранной группы
def get_schedule(group):
    # Создаем подключение к базе данных
    conn = get_connection()
    
    # Пример запроса к расписанию; в реальной БД группы следует добавить в таблицы
    query = """
        SELECT ДеньНедели.название AS 'День недели', Время.начало || ' - ' || Время.конец AS 'Время',
               Дисциплины.название AS 'Дисциплина', Преподаватели.имя || ' ' || Преподаватели.фамилия AS 'Преподаватель',
               Аудитории.номер || ', ' || Аудитории.здание AS 'Аудитория'
        FROM Расписание
        JOIN Дисциплины ON Расписание.дисциплина_id = Дисциплины.дисциплина_id
        JOIN Преподаватели ON Расписание.преподаватель_id = Преподаватели.преподаватель_id
        JOIN Время ON Расписание.время_id = Время.время_id
        JOIN ДеньНедели ON Расписание.день_id = ДеньНедели.день_id
        JOIN Аудитории ON Расписание.аудитория_id = Аудитории.аудитория_id
        WHERE Расписание.дисциплина_id IN (
            SELECT дисциплина_id FROM Дисциплины WHERE название IN 
                ('Математика', 'Физика')  -- Эти дисциплины только для примера, можно менять
        )
        ORDER BY ДеньНедели.день_id, Время.начало
    """
    schedule = pd.read_sql(query, conn)
    conn.close()
    return schedule

# Заголовок приложения
st.title("Расписание занятий")

# Выпадающий список для выбора группы
group = st.selectbox("Выберите группу", get_groups())

# Кнопка для отображения расписания
if st.button("Показать расписание"):
    schedule = get_schedule(group)
    if not schedule.empty:
        st.write(f"Расписание для {group}")
        st.dataframe(schedule)
    else:
        st.write("Нет данных для отображения.")
